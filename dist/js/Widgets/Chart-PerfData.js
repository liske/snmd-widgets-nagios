define(["snmd-core/js/SVGWidget","snmd-core/js/SVGImpl/Chart","snmd-widgets-nagios/js/Utils","js-logger"],function(t,s,a,e){"use strict";var r=function(e,r,i){this.opts={desc:i,dpi:.2,cls:t.srClassOpts(i,"Chart"),lcls:["snmd-lcl-Nag","snmd-lcl-NagPerf","snmd-lcl-NagPerfData"],mcls:["snmd-mcl-Nag","snmd-mcl-NagPerf","snmd-mcl-NagPerfData"],tcls:["snmd-tcl-Nag","snmd-tcl-NagPerf","snmd-tcl-NagPerfData"]},"string"==typeof i.title?this.opts.title=i.title:this.opts.title="Performance Data","object"==typeof i.axis?this.opts.axis=i.axis.map(function(t){var s={};return"number"==typeof t.max?s.max=t.max:s.max=100,"string"==typeof t.scale?s.scale=t.scale:s.scale="linear",s}):this.opts.axis=[{max:100,scale:"linear"}],this.graphs=i.graphs.map(function(t,s){"string"!=typeof t.name&&(t.name="noname"+s),"number"!=typeof t.axis&&(t.axis=0),"string"!=typeof t.unit&&(t.unit="");var a=t.keys;return t.keys=new Map,void 0!==t.factors?a.map(function(s,a){void 0!==t.factors[a]?t.keys.set(s,parseFloat(t.factors[a])):t.keys.set(s,1)}):a.forEach(function(s){t.keys.set(s,1)}),t}),this.desc=i,this.last=[];var n;for(n=0;n<i.topics.length;n++){this.last[i.topics[n]]=[];var o;for(o=0;o<this.graphs.length;o++)this.last[i.topics[n]][o]=[]}this.chart=new s(e,r,this.opts,this.graphs,a.qTipConfig(this,this.graphs.map(function(t){return t.name})))};return r.prototype.handleUpdate=function(t,s){var r;try{r=JSON.parse(s)}catch(t){return void e.debug("[Nagios/Chart-PerfData] JSON error in performance data: "+t.message)}a.qTipUpdate(t,r,this);var i,n,o=function(t,s){var a=parseInt(r.perf_data[s].val,10);isNaN(a)||(n+=a*t)};for(i=0;i<this.graphs.length;i++){this.last[t][i].val=0,this.last[t][i].state=0;try{n=0,this.graphs[i].keys.forEach(o),this.last[t][i].val=n}catch(s){e.debug("[Nagios/Chart-PerfData] Error processing performance data of "+t+"["+i+"]: "+s.message)}try{this.last[t][i].state=r.state}catch(t){e.debug("[Nagios/Chart-PerfData] Error processing state data: "+t.message)}}var c=[],h=0;for(i=0;i<this.graphs.length;i++){c[i]=0;var l;for(l in this.last)c[i]+=this.last[l][i].val,h=Math.max(h,this.last[l][i].state)}this.chart.update(r._timestamp,c,h)},r});